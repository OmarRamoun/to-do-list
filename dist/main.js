(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),s=n.n(r),o=n(645),a=n.n(o)()(s());a.push([e.id,"input:focus {\r\n  outline: none;\r\n}\r\n\r\nimg {\r\n  opacity: 0.5;\r\n  transition: opacity 0.2s ease-in-out;\r\n}\r\n\r\nimg:hover {\r\n  opacity: 1;\r\n}\r\n\r\n#clear-all {\r\n  opacity: 0.5;\r\n}\r\n\r\n#clear-all:hover {\r\n  opacity: 1;\r\n  text-decoration: underline;\r\n}\r\n\r\n#clear-all:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.cursor-move {\r\n  cursor: move;\r\n}\r\n\r\n.td-line-through {\r\n  text-decoration: line-through;\r\n}\r\n\r\n#warning {\r\n  transition: opacity 1s ease-in-out;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,UAAU;EACV,0BAA0B;AAC5B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,kCAAkC;AACpC",sourcesContent:["input:focus {\r\n  outline: none;\r\n}\r\n\r\nimg {\r\n  opacity: 0.5;\r\n  transition: opacity 0.2s ease-in-out;\r\n}\r\n\r\nimg:hover {\r\n  opacity: 1;\r\n}\r\n\r\n#clear-all {\r\n  opacity: 0.5;\r\n}\r\n\r\n#clear-all:hover {\r\n  opacity: 1;\r\n  text-decoration: underline;\r\n}\r\n\r\n#clear-all:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.cursor-move {\r\n  cursor: move;\r\n}\r\n\r\n.td-line-through {\r\n  text-decoration: line-through;\r\n}\r\n\r\n#warning {\r\n  transition: opacity 1s ease-in-out;\r\n}\r\n"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,s,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(s," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},a=[],i=0;i<e.length;i++){var c=e[i],l=r.base?c[0]+r.base:c[0],d=o[l]||0,u="".concat(l," ").concat(d);o[l]=d+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var h=s(m,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:h,references:1})}a.push(u)}return a}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var o=r(e=e||[],s=s||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var i=n(o[a]);t[i].references--}for(var c=r(e,s),l=0;l<o.length;l++){var d=n(o[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,s&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},493:(e,t,n)=>{e.exports=n.p+"d3845d0a3def722e0661.png"},14:(e,t,n)=>{e.exports=n.p+"ec51b32a7052504d2e1a.png"},342:(e,t,n)=>{e.exports=n.p+"8fe84e7010d2acc3598d.png"},267:(e,t,n)=>{e.exports=n.p+"61394eefae2875887d71.png"}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(379),t=n.n(e),r=n(795),s=n.n(r),o=n(569),a=n.n(o),i=n(565),c=n.n(i),l=n(216),d=n.n(l),u=n(589),p=n.n(u),m=n(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=a().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=d(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const f=(e,t)=>{const n=document.createElement("div");n.classList.add("d-flex","justify-content-end","align-items-center");const r=document.createElement("img");r.classList.add("cursor-pointer"),r.src=e,r.alt=t.id,r.classList.add("img-fluid"),n.appendChild(r),t.appendChild(n)};var v=n(14),A=n(267);class g{static tasks=[];constructor({description:e,completed:t=!1,index:n=g.tasks.length+1}){this.description=e,this.completed=t,this.index=n}populate(e,t){const n=document.createElement("tr"),r=document.createElement("td"),s=document.createElement("input");s.classList.add("form-check-input"),s.type="checkbox";const o=document.createElement("span");o.classList.add("ps-2"),o.innerText=this.description,r.appendChild(s),r.appendChild(o);const a=document.createElement("td");a.id=`menu-${t+1}`,a.classList.add("align-middle"),((e,t,n)=>{const r=document.createElement("div");r.classList.add("d-flex","justify-content-end","align-items-center");const s=document.createElement("img");s.src=e,s.alt=`${n.id}-bot`,s.classList.add("img-fluid");const o=document.createElement("img");o.src=t,o.alt=`${n.id}-top`,o.classList.add("cursor-pointer","cursor-move","img-fluid","opacity-0","position-absolute"),r.appendChild(s),r.appendChild(o),n.appendChild(r),n.classList.add("position-relative")})(v,A,a),n.appendChild(r),n.appendChild(a),e.appendChild(n),this.element=n,s.addEventListener("change",(()=>{s.checked?(this.completed=!0,o.classList.add("td-line-through"),r.classList.add("opacity-50")):(this.completed=!1,o.classList.remove("td-line-through"),r.classList.remove("opacity-50")),g.saveLocalTasks()})),this.completed&&(s.checked=!0,o.classList.add("td-line-through"),r.classList.add("opacity-50"));const i=a.firstElementChild.firstElementChild,c=a.firstElementChild.lastElementChild,l=document.createElement("input");l.type="text",l.classList.add("border-0","ps-2","bg-secondary","text-white"),c.addEventListener("click",(()=>{c.classList.contains("cursor-move")?(i.classList.toggle("opacity-0"),c.classList.toggle("opacity-0"),c.classList.toggle("cursor-move"),n.classList.add("bg-secondary"),l.value=o.innerText,r.replaceChild(l,o),l.focus()):(this.remove(),this.element.remove())})),l.addEventListener("keyup",(e=>{13===e.keyCode&&(o.innerText=l.value,r.replaceChild(o,l),i.classList.toggle("opacity-0"),c.classList.toggle("opacity-0"),c.classList.toggle("cursor-move"),n.classList.remove("bg-secondary"),this.description=l.value,g.saveLocalTasks())})),g.saveLocalTasks()}static populateAll(e){this.sort(),this.tasks.forEach(((t,n)=>{t.populate(e,n)}))}static sort(){this.tasks.sort(((e,t)=>e.index-t.index))}static saveLocalTasks(){localStorage.setItem("tasks",JSON.stringify(this.tasks))}static loadLocalTasks(){const e=JSON.parse(localStorage.getItem("tasks"));e&&e.forEach(((e,t)=>{g.tasks[t]=new g(e)}))}add(){return g.tasks.push(this),g.saveLocalTasks(),this}remove(){return g.tasks=g.tasks.filter((e=>e!==this)),g.tasks.forEach(((e,t)=>{e.index=t+1})),g.saveLocalTasks(),this}static clearAllCompleted(){this.tasks=this.tasks.filter((e=>(e.completed&&e.element.remove(),!e.completed))),this.tasks.forEach(((e,t)=>{e.index=t+1})),this.saveLocalTasks()}}var y=n(342),E=n(493);const C=document.querySelector("#to-do-list"),L=document.querySelector("#refresh"),k=document.querySelector("#enter"),x=document.querySelector("#add-task"),b=document.querySelector("#enter"),T=document.querySelector("#warning"),w=document.querySelector("#clear-all");window.onload=()=>{g.loadLocalTasks(),g.populateAll(C),f(y,L),f(E,k),b.addEventListener("click",(()=>{if(x.value){const e=new g({description:x.value});e.add().populate(C,e.index-1),x.value=""}else T.classList.remove("d-none"),setTimeout((()=>T.classList.remove("opacity-0")),0),setTimeout((()=>T.classList.add("opacity-0")),2e3),setTimeout((()=>T.classList.add("d-none")),3e3)})),x.addEventListener("keyup",(e=>{13===e.keyCode&&b.click()})),w.addEventListener("click",(()=>{g.clearAllCompleted()}))}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,